{"version":3,"sources":["helpers/getMovies.js","components/SearchBar.js","components/Table.js","hooks/useFetchMovies.js","components/MovieDetails.js","App.js","reportWebVitals.js","index.js"],"names":["getMovies","url","a","fetch","resp","json","results","SearchBar","handleSearch","handleFilter","useState","query","setQuery","rating","setRating","className","type","placeholder","value","onChange","e","target","name","starCount","onStarClick","Table","filter","handleSelectMovie","movies","error","loading","state","setState","useEffect","then","useFetchMovies","ratings","filteredMovies","el","vote_average","scope","map","movie","onClick","src","poster_path","alt","original_title","id","length","MovieDetails","handleGoBack","overview","App","apiKey","discoveryUrl","searchUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50834ee8.chunk.js","sourcesContent":["export const getMovies = async(url) => {\n\n    const resp = await fetch(url);\n    const {results} = await resp.json();\n\n    return results;\n\n}\n","import { useState } from \"react\";\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport const SearchBar = ({handleSearch, handleFilter}) => {\n    const [query, setQuery] = useState('');\n    const [rating, setRating] = useState(0);\n\n    const HandleQueryChange = (e) => {\n        setQuery(e.target.value);\n        handleSearch (e.target.value);\n    }\n\n    const HandleRatingChange = (e) => {\n              \n        e === rating ?\n            setRating(0) :\n            setRating(e); \n            handleFilter (e);\n            //console.log(rating)\n        //setQuery(e.target.value);\n        //handleSearch (e.target.value);\n    }\n\n    return (\n        <nav className=\"navbar navbar-light bg-light\">\n        <form className=\"form-inline\">\n            <input \n                className=\"form-control mr-sm-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                value = {query}\n                onChange = { HandleQueryChange }\n                />\n                <StarRatingComponent \n                    name=\"rate1\" \n                    starCount={5}\n                    value={rating}\n                    onStarClick= { HandleRatingChange }\n                />\n        </form>\n        </nav>\n    )\n}\n","import { useFetchMovies } from \"../hooks/useFetchMovies\";\nimport { SearchBar } from \"./SearchBar\";\n\nexport const Table = ({\n  url,\n  filter,\n  handleSelectMovie,\n  handleSearch,\n  handleFilter,\n}) => {\n  const { movies, loading } = useFetchMovies(url);\n\n  const ratings = [0, 2, 4, 6, 8, 10];\n\n  const greaterThan = (el) => {\n    return (\n      el.vote_average <= ratings[filter] &&\n      el.vote_average >= ratings[filter - 1]\n    );\n  };\n\n  let filteredMovies = [...movies];\n  if (filter) {\n    filteredMovies = movies.filter(greaterThan);\n  }\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"p-3 alert alert-info\">Loading...</div>\n      ) : (\n        <>\n          <SearchBar handleSearch={handleSearch} handleFilter={handleFilter} />\n          <table className=\"table table-dark mt-4\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Poster</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredMovies.map((movie) => (\n                <tr key={movie.id} onClick={ () => handleSelectMovie(movie)}>\n                  <th scope=\"row\">\n                    <img\n                      className=\"thumb\"\n                      src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                      alt={movie.original_title}\n                    />\n                  </th>\n                  <td className=\"align-middle\">{movie.original_title}</td>\n                  <td className=\"align-middle\">{movie.vote_average}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n      {!filteredMovies.length && !loading && (\n        <div className=\"p-3 alert alert-danger no-results\">\n          No results found...\n        </div>\n      )}\n    </>\n  );\n};\n","import {useState, useEffect} from 'react';\nimport { getMovies } from '../helpers/getMovies';\n\nexport const useFetchMovies = (url) => {\n\n    const [state, setState] = useState({movies: [], error: null, loading:true});\n\n    useEffect(() => {\n        getMovies(url)\n        .then(movies =>\n            setState({\n                movies, \n                error:null,\n                loading: false\n            })\n            )\n       \n    }, [url])\n\n    return state\n}\n","export const MovieDetails = ({movie, handleGoBack}) => {\n    return (\n        <div className=\"movie-card text-center\">   \n            <div><button type=\"button\" className=\"btn btn-primary float-right\" onClick={handleGoBack}>Go Back</button></div>         \n            <h2 className=\"mt-4\">{movie.original_title}</h2>\n            <p>Rating: {movie.vote_average}</p>\n            <img className='poster' src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.original_title}/>\n            <p className=\"overview mt-4\">{movie.overview}</p>\n        </div>\n    )\n}\n","import { useState } from 'react';\nimport { Table } from './components/Table';\nimport { MovieDetails } from './components/MovieDetails';\n\nimport './App.css';\n\nfunction App() {\n  const apiKey ='572f100e521523a3f80677828f68ede3';\n  const discoveryUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate`;\n  \n\n  const [state, setState] = useState({\n    url: discoveryUrl,\n    filter: 0,\n    movie: null\n  })\n\n  const {url, filter, movie} = state;\n\n  const handleSearch = (e) => {\n    const searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${e}&page=1&include_adult=false`;\n    e !== '' ?\n    setState ({\n      ...state,\n      url: searchUrl\n    }) :\n    setState ({\n      ...state,\n      url: discoveryUrl\n    });\n  }\n\n  const handleFilter = (value) => {\n    value === filter ?\n    setState ({\n      ...state,\n      filter: 0\n    }) :\n    setState ({\n      ...state,\n      filter: value\n    });\n  }\n\n  const handleSelectMovie = (movie) =>  {\n    setState ({\n      ...state,\n      movie\n    });\n  }\n\n  const handleGoBack = () =>  {\n    setState ({\n      ...state,\n      movie: null\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"mt-4\">The Movie Theater Challenge</h1>\n      { movie ?\n       <MovieDetails movie={movie} handleGoBack={ handleGoBack }/> :\n       <Table url={url} filter={filter} handleSelectMovie={handleSelectMovie} handleSearch = { handleSearch } handleFilter= { handleFilter } />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}