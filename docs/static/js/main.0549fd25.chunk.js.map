{"version":3,"sources":["helpers/getMovies.js","components/Table.js","hooks/useFetchMovies.js","components/MovieDetails.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["getMovies","url","a","fetch","resp","json","results","Table","filter","handleSelectMovie","useState","movies","error","loading","state","setState","useEffect","then","useFetchMovies","ratings","filteredMovies","el","vote_average","className","scope","map","movie","onClick","src","poster_path","alt","original_title","id","length","MovieDetails","handleGoBack","type","overview","SearchBar","q","r","handleSearch","handleFilter","query","setQuery","rating","setRating","placeholder","value","onChange","e","target","name","starCount","onStarClick","App","apiKey","discoveryUrl","searchUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAAaA,EAAS,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACJC,MAAMF,GADF,cACjBG,EADiB,gBAEGA,EAAKC,OAFR,uBAEfC,EAFe,EAEfA,QAFe,kBAIhBA,GAJgB,2CAAH,sD,OCETC,EAAQ,SAAC,GAAwC,IAAtCN,EAAqC,EAArCA,IAAKO,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,kBACnC,ECA4B,SAACR,GAC7B,MAA0BS,mBAAS,CACjCC,OAAQ,GACRC,MAAO,KACPC,SAAS,IAHX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACRhB,EAAUC,GAAKgB,MAAK,SAACN,GAAD,OAClBI,EAAS,CACPJ,SACAC,MAAO,KACPC,SAAS,SAGZ,CAACZ,IAEGa,EDjBqBI,CAAejB,GAAnCU,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,QAEVM,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAS5BC,EAAc,YAAOT,GAKzB,OAJIH,IACFY,EAAiBT,EAAOH,QATN,SAACa,GACnB,OACEA,EAAGC,cAAgBH,EAAQX,IAC3Ba,EAAGC,cAAgBH,EAAQX,EAAS,OAUtC,qCACGK,EACC,qBAAKU,UAAU,uBAAf,wBAEA,wBAAOA,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yBAGJ,gCACGJ,EAAeK,KAAI,SAACC,GAAD,OAClB,qBAAmBC,QAAS,kBAAMlB,EAAkBiB,IAApD,UACE,oBAAIF,MAAM,MAAV,SACE,qBACED,UAAU,QACVK,IAAG,0CAAqCF,EAAMG,aAC9CC,IAAKJ,EAAMK,mBAGf,oBAAIR,UAAU,eAAd,SAA8BG,EAAMK,iBACpC,oBAAIR,UAAU,eAAd,SAA8BG,EAAMJ,iBAT7BI,EAAMM,aAerBZ,EAAea,SAAWpB,GAC1B,qBAAKU,UAAU,oCAAf,qCElDKW,EAAe,SAAC,GAA6B,IAA3BR,EAA0B,EAA1BA,MAAOS,EAAmB,EAAnBA,aACpC,OACE,sBAAKZ,UAAU,yBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,wBACEa,KAAK,SACLb,UAAU,6BACVI,QAASQ,EAHX,uBAQF,oBAAIZ,UAAU,OAAd,SAAsBG,EAAMK,iBAC5B,yCAAYL,EAAMJ,gBAClB,qBACEC,UAAU,SACVK,IAAG,0CAAqCF,EAAMG,aAC9CC,IAAKJ,EAAMK,iBAEb,mBAAGR,UAAU,gBAAb,SAA8BG,EAAMW,e,iBChB7BC,EAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,EAAGC,EAAoC,EAApCA,EAAGC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC9C,EAA0BhC,mBAAS6B,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA4BlC,mBAAS8B,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAYA,OACE,qBAAKvB,UAAU,+BAAf,SACE,uBAAMA,UAAU,cAAhB,UACE,uBACEA,UAAU,uBACVa,KAAK,SACLW,YAAY,SACZ,aAAW,SACXC,MAAOL,EACPM,SAnBkB,SAACC,GACzBN,EAASM,EAAEC,OAAOH,OAClBP,EAAaS,EAAEC,OAAOH,UAmBlB,cAAC,IAAD,CACEI,KAAK,QACLC,UAAW,EACXL,MAAOH,EACPS,YApBmB,SAACJ,GACXJ,EAAfI,IAAML,EAAmB,EAAeK,GACxCR,EAAaQ,Y,MCwEFK,MAhFf,WACE,IAAMC,EAAS,mCACTC,EAAY,8DAA0DD,EAA1D,iIAElB,EAA0B9C,mBAAS,CACjCT,IAAKwD,EACLjD,OAAQ,EACRkB,MAAO,KACPiB,MAAO,KAJT,mBAAO7B,EAAP,KAAcC,EAAd,KAOQd,EAA8Ba,EAA9Bb,IAAKO,EAAyBM,EAAzBN,OAAQkB,EAAiBZ,EAAjBY,MAAOiB,EAAU7B,EAAV6B,MAEtBF,EAAe,SAACF,GACpB,IAAMmB,EAAS,4DAAwDF,EAAxD,iCAAuFjB,EAAvF,+BAEXxB,EADE,KAANwB,EACa,2BACJzB,GADG,IAENb,IAAKyD,EACLf,MAAOJ,IAEA,2BACJzB,GADG,IAENb,IAAKwD,EACLd,MAAOJ,MAITG,EAAe,SAACM,GAEhBjC,EADJiC,IAAUxC,EACG,2BACJM,GADG,IAENN,OAAQ,IAED,2BACJM,GADG,IAENN,OAAQwC,MAkBhB,OACE,sBAAKzB,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAd,yCACCG,EACC,cAAC,EAAD,CAAcA,MAAOA,EAAOS,aAXb,WACnBpB,EAAS,2BACJD,GADG,IAENY,MAAO,WAUL,qCACE,cAAC,EAAD,CACEa,EAAGI,EACHH,EAAGhC,EACHiC,aAAcA,EACdC,aAAcA,IAEhB,cAAC,EAAD,CACEzC,IAAKA,EACLO,OAAQA,EACRC,kBA9BgB,SAACiB,GACzBX,EAAS,2BACJD,GADG,IAENY,YA4BMe,aAAcA,EACdC,aAAcA,WClEXiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.0549fd25.chunk.js","sourcesContent":["export const getMovies = async (url) => {\n  const resp = await fetch(url);\n  const { results } = await resp.json();\n\n  return results;\n};\n","import { useFetchMovies } from \"../hooks/useFetchMovies\";\n\nexport const Table = ({ url, filter, handleSelectMovie }) => {\n  const { movies, loading } = useFetchMovies(url);\n\n  const ratings = [0, 2, 4, 6, 8, 10];\n\n  const greaterThan = (el) => {\n    return (\n      el.vote_average <= ratings[filter] &&\n      el.vote_average >= ratings[filter - 1]\n    );\n  };\n\n  let filteredMovies = [...movies];\n  if (filter) {\n    filteredMovies = movies.filter(greaterThan);\n  }\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"p-3 alert alert-info\">Loading...</div>\n      ) : (\n        <table className=\"table table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Poster</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Rating</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredMovies.map((movie) => (\n              <tr key={movie.id} onClick={() => handleSelectMovie(movie)}>\n                <th scope=\"row\">\n                  <img\n                    className=\"thumb\"\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.original_title}\n                  />\n                </th>\n                <td className=\"align-middle\">{movie.original_title}</td>\n                <td className=\"align-middle\">{movie.vote_average}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      {!filteredMovies.length && !loading && (\n        <div className=\"p-3 alert alert-danger no-results\">\n          No results found...\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getMovies } from \"../helpers/getMovies\";\n\nexport const useFetchMovies = (url) => {\n  const [state, setState] = useState({\n    movies: [],\n    error: null,\n    loading: true,\n  });\n\n  useEffect(() => {\n    getMovies(url).then((movies) =>\n      setState({\n        movies,\n        error: null,\n        loading: false,\n      })\n    );\n  }, [url]);\n\n  return state;\n};\n","export const MovieDetails = ({ movie, handleGoBack }) => {\n  return (\n    <div className=\"movie-card text-center\">\n      <div className=\"goback-container\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary float-left\"\n          onClick={handleGoBack}\n        >\n          Go Back\n        </button>\n      </div>\n      <h2 className=\"mt-4\">{movie.original_title}</h2>\n      <p>Rating: {movie.vote_average}</p>\n      <img\n        className=\"poster\"\n        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n        alt={movie.original_title}\n      />\n      <p className=\"overview mt-4\">{movie.overview}</p>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport StarRatingComponent from \"react-star-rating-component\";\n\nexport const SearchBar = ({ q, r, handleSearch, handleFilter }) => {\n  const [query, setQuery] = useState(q);\n  const [rating, setRating] = useState(r);\n\n  const HandleQueryChange = (e) => {\n    setQuery(e.target.value);\n    handleSearch(e.target.value);\n  };\n\n  const HandleRatingChange = (e) => {\n    e === rating ? setRating(0) : setRating(e);\n    handleFilter(e);\n  };\n\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={query}\n          onChange={HandleQueryChange}\n        />\n        <StarRatingComponent\n          name=\"rate1\"\n          starCount={5}\n          value={rating}\n          onStarClick={HandleRatingChange}\n        />\n      </form>\n    </nav>\n  );\n};\n","import { useState } from \"react\";\nimport { Table } from \"./components/Table\";\nimport { MovieDetails } from \"./components/MovieDetails\";\nimport { SearchBar } from \"./components/SearchBar\";\nimport \"./App.css\";\n\nfunction App() {\n  const apiKey = \"572f100e521523a3f80677828f68ede3\";\n  const discoveryUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate`;\n\n  const [state, setState] = useState({\n    url: discoveryUrl,\n    filter: 0,\n    movie: null,\n    query: \"\",\n  });\n\n  const { url, filter, movie, query } = state;\n\n  const handleSearch = (q) => {\n    const searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${q}&page=1&include_adult=false`;\n    q !== \"\"\n      ? setState({\n          ...state,\n          url: searchUrl,\n          query: q,\n        })\n      : setState({\n          ...state,\n          url: discoveryUrl,\n          query: q,\n        });\n  };\n\n  const handleFilter = (value) => {\n    value === filter\n      ? setState({\n          ...state,\n          filter: 0,\n        })\n      : setState({\n          ...state,\n          filter: value,\n        });\n  };\n\n  const handleSelectMovie = (movie) => {\n    setState({\n      ...state,\n      movie,\n    });\n  };\n\n  const handleGoBack = () => {\n    setState({\n      ...state,\n      movie: null,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"mt-4\">The Movie Theater Challenge</h1>\n      {movie ? (\n        <MovieDetails movie={movie} handleGoBack={handleGoBack} />\n      ) : (\n        <>\n          <SearchBar\n            q={query}\n            r={filter}\n            handleSearch={handleSearch}\n            handleFilter={handleFilter}\n          />\n          <Table\n            url={url}\n            filter={filter}\n            handleSelectMovie={handleSelectMovie}\n            handleSearch={handleSearch}\n            handleFilter={handleFilter}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}